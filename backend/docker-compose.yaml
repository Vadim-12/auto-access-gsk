services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    restart: unless-stopped
    ports:
      - '${API_HTTP_PORT:-8001}:${API_HTTP_PORT:-8001}'
    env_file:
      - .env
    volumes:
      - ./src:/usr/src/app/src
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./nest-cli.json:/usr/src/app/nest-cli.json
      - /usr/src/app/node_modules
    networks:
      - app_network
    depends_on:
      - migrations
      - db

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: migrations
    command: yarn ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli migration:run -d src/config/orm.datasource.ts
    env_file:
      - .env
    volumes:
      - ./src:/usr/src/app/src
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - /usr/src/app/node_modules
    networks:
      - app_network
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    container_name: db
    restart: unless-stopped
    ports:
      - '${DB_PORT:-5433}:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
